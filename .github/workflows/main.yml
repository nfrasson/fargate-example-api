name: Deploy SAM Application

on:
  push:
    branches:
      - main

env:
  STAGE: dev
  AWS_REGION: sa-east-1
  ECR_REPO_NAME: fargate-backend-ecr-dev
  DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          path: |
            node_modules
            */*/node_modules

      - name: Install Node.js dependencies
        run: npm ci

      - name: Setup AWS SAM CLI
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy ECR Resources
        run: |
          cd cloudformation
          sam deploy --template-file ecr-resources.yaml --config-file ecr-samconfig.toml --no-fail-on-empty-changeset --parameter-overrides Stage=$STAGE

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPO_NAME:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPO_NAME:$IMAGE_TAG

      - name: Deploy VPC Resources
        run: |
          cd cloudformation
          sam deploy --template-file vpc-resources.yaml --config-file vpc-samconfig.toml --no-fail-on-empty-changeset --parameter-overrides Stage=$STAGE

      - name: Deploy ECS Resources
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd cloudformation
          sam deploy --template-file ecs-resources.yaml --no-fail-on-empty-changeset --config-file ecs-samconfig.toml --parameter-overrides VpcStackName=fargate-backend-vpc-$STAGE ECRImageURL=$ECR_REGISTRY/$ECR_REPO_NAME:$IMAGE_TAG Stage=$STAGE DatadogAPIKey=$DATADOG_API_KEY
